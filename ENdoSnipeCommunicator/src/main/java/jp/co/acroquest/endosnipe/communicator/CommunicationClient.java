/*******************************************************************************
 * ENdoSnipe 5.0 - (https://github.com/endosnipe)
 * 
 * The MIT License (MIT)
 * 
 * Copyright (c) 2012 Acroquest Technology Co.,Ltd.
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 ******************************************************************************/
package jp.co.acroquest.endosnipe.communicator;

import jp.co.acroquest.endosnipe.communicator.entity.ConnectNotifyData;

/**
 * コミュニケーションクライアントのためのインターフェースです。<br />
 * 
 * @author y-komori
 */
public interface CommunicationClient extends AbstractCommunicator
{
    /**
     * コミュニケーションクライアントを初期化します。<br />
     * 
     * @param hostName 接続先ホスト名またはIPアドレス
     * @param port 接続先ポート番号
     */
    void init(String hostName, int port);

    /**
     * サーバへ接続します。<br />
     * 
     * 本メソッドを呼び出す前に、{@link #init(String, int)} メソッドを呼び出してください。<br />
     * 
     * @param connectNotify 接続完了後に送信する接続通知
     */
    void connect(ConnectNotifyData connectNotify);

    /**
     * サーバから切断します。<br />
     */
    void disconnect();

    /**
     * コミュニケーションクライアントを終了します。<br />
     * 
     * 本メソッドは、{@link #disconnect()} メソッドの後に呼び出してください。<br />
     */
    void shutdown();

    /**
     * 接続先 IP アドレスを返します。<br />
     *
     * @return 接続先 IP アドレス
     */
    String getIpAddress();
}
