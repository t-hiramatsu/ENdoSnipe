################################################################################
# Javelin Configurations
################################################################################

#--------------------------------------------------
# 動作解析用ログに関する設定
#--------------------------------------------------

# Javelinの動作状況を出力するシステムログの出力先ディレクトリ
javelin.system.log=../traces

# システムログのログレベル(FATAL、ERROR、WARN、INFO、DEBUG)
javelin.system.log.level=INFO

# システムログの最大ファイルサイズ(bytes)
javelin.system.log.size.max=1000000

# システムログの最大ファイル数
javelin.system.log.num.max=16

# Javelinのイベントレベル(ERROR、WARN、INFO)
javelin.event.level=WARN

# アラーム送信間隔の最小値
javelin.minimumAlarmInterval=0

# 同一のイベントを検出する間隔。前回のイベントからこの時間経過している場合のみ、イベントを検出する。
# NoTimeoutDetected、IntervalErrorが過剰に検出されることを防止する。
javelin.eventInterval=3600000

#--------------------------------------------------
# 通信に関する設定
#--------------------------------------------------

# BottleneckEyeとの通信に使用するポート番号
javelin.acceptPort=18000

# BottleNeckEyeとの通信に使用するポートを再取得する間隔
# 通信に使用するポートを起動時に取得できなかった場合、下記の間隔で再取得を行う(単位:ミリ秒)
javelin.bind.interval=5000

# BottleneckEye/DataCollectorとの通信に使用するポートを範囲指定するか
javelin.acceptPort.isRange=false

# BottleneckEye/DataCollectorとの通信に使用するポートを範囲指定する場合の最大値
javelin.acceptPort.rangeMax=18010

# Connection mode (client or server)
javelin.connection.mode=client

# BottleneckEye/DataCollectorとの通信に使用するホスト名 (javelin to BottleneckEye)
javelin.connectHost=localhost

# BottleneckEye/DataCollectorとの通信に使用するポート番号 (javelin to BottleneckEye)
javelin.connectPort=19000

# DataCollectorのデータベース名。
javelin.databaseName=endosnipedb

#--------------------------------------------------
# ファイルパスに関する設定(本ファイルからの相対パス指定可)
#--------------------------------------------------

# jvnファイルを出力するディレクトリへのパス
javelin.javelinFileDir=../logs

# ライセンスファイルへのパス
javelin.license.path=../license

# 閾値等の情報の永続化用ファイルへのパス
javelin.serializeFile=../data/serialize.dat

# 変換対象クラス指定ファイルへのパス
javelin.include=include.conf

# 変換除外クラス指定ファイルへのパス
javelin.exclude=exclude.conf

#--------------------------------------------------
# Javelinログ出力に関する設定
#--------------------------------------------------

# jvnログをサーバ側に保存するかどうか
javelin.log.enable=false

# jvnログの最大ファイル数
javelin.log.jvn.max=256

# jvnログファイルの圧縮閾値
# (出力ファイル数がこの数に達した時にログファイルをZIP圧縮します)
javelin.log.zip.max=256

# CallTreeNodeを使用するかどうか
javelin.call.tree.enable=false

# Javelinで保持するコールツリーの子の最大数。CallTreeに所属するCallTreeNodeの数がこの値より大きくなった場合に、
# 途中までのCallTreeNodeをjvnに出力し、Profilerビューで確認できる計測情報を保存する。
javelin.call.tree.max=5000

# CallTreeNodeが最大になった際にも全てをjvnログとして保存し、
# 計測するかどうか
javelin.call.tree.all=false

# 1クラスあたりで保持するメソッド呼び出し情報の最大数
javelin.record.invocation.num.max=1024

# Discardを実施するかどうか
javelin.discard=true

#--------------------------------------------------
# Javelinログ出力内容に関する設定
#--------------------------------------------------

# メソッド呼び出しの引数情報出力に関する設定
javelin.log.args=false
javelin.log.args.detail=false
javelin.log.args.detail.depth=1

# メソッド呼び出しの戻り値情報出力に関する設定
javelin.log.return=false
javelin.log.return.detail=false
javelin.log.return.detail.depth=1

# 引数や戻り値情報の最大文字数
javelin.stringLimitLength=102400

# inheritanceで継承階層を調べる深さの最大値
javelin.inheritance.depth=5

# bytecodeの内容を元に計測対象から除外するかどうか。0:除外しない 1:除外する。
javelin.bytecode.exclude.policy=1

# Javelinの情報取得対象から除外する、最大bytecode長。bytecode長がこの値以下の場合のみ、除外判定を行う。
javelin.bytecode.exclude.length=32

#Javelinの情報取得対象から除外する、最大の制御命令数。制御命令の数がこの値以下の場合、除外する。
javelin.bytecode.exclude.controlCount=0

# メソッド呼び出しの時のスタックトレースを出力する
javelin.log.stacktrace=false

# ログに出力するスタックトレースの深さ
javelin.traceDepth=30

# VMのMBean情報を出力する
javelin.log.mbeaninfo=true
javelin.log.mbeaninfo.root=true

# メソッド呼び出しのルートノードにつける名称
javelin.rootCallerName=root

# メソッド呼び出しのエンドノードが特定できない場合につける名称
javelin.endCalleeName=unknown

# スレッドの名称の決定方法
# 0:スレッド名@スレッドID(スレッドクラス名@オブジェクトID)
# 1:スレッドID
# 2:スレッド名
# 3:メソッド名（Servletフィルタ組み込み時にはサーブレットパスとなる）
javelin.threadModel=0

# CPU使用率の単位
javelin.cpu.unit=1

#--------------------------------------------------
# 閾値判定方式に関する設定
#--------------------------------------------------

# ターン・アラウンド・タイムを閾値超過の判定対象とする。
#javelin.recordStrategy=jp.co.acroquest.endosnipe.javelin.record.DefaultRecordStrategy

# ターン・アラウンド・タイムもしくはCPU時間を、
# 閾値超過の判定対象とする。
javelin.recordStrategy=jp.co.acroquest.endosnipe.javelin.record.CpuTimeRecordStrategy

# メソッドのターンアラウンドタイムが、
# これまでの最大値を更新した場合に、閾値超過とみなす。
#javelin.recordStrategy=jp.co.acroquest.endosnipe.javelin.record.MaxAccumulatedTimeUpdateRecordStrategy

#--------------------------------------------------
# 機能拡張用リスナの設定
#--------------------------------------------------

# アラームが発生した場合に追加処理を行うリスナ
javelin.alarmListeners=

# BottleneckEyeから電文を受信した際の処理を拡張するリスナ
javelin.telegramListeners=jp.co.acroquest.endosnipe.javelin.communicate.GetRequestTelegramListener,jp.co.acroquest.endosnipe.javelin.communicate.ResetRequestTelegramListener,jp.co.acroquest.endosnipe.javelin.communicate.telegram.JvnLogDownloadTelegramListener,jp.co.acroquest.endosnipe.javelin.communicate.telegram.JvnLogListTelegramListener,jp.co.acroquest.endosnipe.javelin.communicate.telegram.SystemResourceTelegramListener,jp.co.acroquest.endosnipe.javelin.communicate.telegram.UpdateRequestTelegramListener,jp.co.acroquest.endosnipe.javelin.communicate.telegram.GetPropertyRequestTelegramListener,jp.co.acroquest.endosnipe.javelin.communicate.TargetSetTelegramListener,jp.co.acroquest.endosnipe.javelin.communicate.GetDumpTelegramListener,jp.co.acroquest.endosnipe.javelin.communicate.telegram.RemoveClassTelegramListener,jp.co.acroquest.endosnipe.javelin.communicate.FunctionCallTelegramListener


#--------------------------------------------------
# 統計処理に関する設定
#--------------------------------------------------

# メモリ中に蓄積する(メソッド毎の)呼び出し情報の件数
javelin.intervalMax=0

# メモリ中に蓄積する(メソッド毎の)例外発生情報の件数
javelin.throwableMax=0

# クラス名の省略化を行う
# (Seasar2アプリケーションでは、クラス名が自動的に延長されるため、
#  本フラグをtrueに設定する事を推奨します)
javelin.className.simplify=false

#--------------------------------------------------
# Turn Around Time 監視に関する設定
#--------------------------------------------------

# Turn Around Timeを監視するかどうか
javelin.tat.monitor=true

# Turn Around Timeの保持期間(単位:ミリ秒)
javelin.tat.keepTime=15000

# Turn Around Timeの値が0の場合に、0の出力を継続する時間(単位:ミリ秒)
javelin.tat.zeroKeepTime=10000

#--------------------------------------------------
# 各種閾値に関する設定
#--------------------------------------------------

# 呼び出し情報の蓄積を行うターン・アラウンド・タイムの閾値(単位:ミリ秒)
javelin.statisticsThreshold=0

# BottleneckEyeへの通知を行うCPUタイムの閾値(単位:ミリ秒)
javelin.alarmCpuThreshold=-1

# BottleneckEyeへの通知を行うターン・アラウンド・タイムの閾値(単位:ミリ秒)
javelin.alarmThreshold=-1

# 例外情報をBottleneckEyeへ通知する
javelin.alarmException=false

#--------------------------------------------------
# 計測対象自動絞り込み機能に関する設定
#--------------------------------------------------

# 計測対象から自動除外する呼び出し回数の閾値
javelin.autoExcludeThreshold.count=0

# 計測対象から自動除外する実行時間の閾値(単位:ミリ秒)
javelin.autoExcludeThreshold.time=0

#--------------------------------------------------
# 計測データの取得に関する設定
#--------------------------------------------------

# システムのリソースデータを取得するかどうか
javelin.resource.collectSystemResources=true

# HadoopAgentのリソースデータを取得するかどうか
javelin.resource.collectHadoopAgentResources=false

# 計測項目名(ID)の接頭辞にする文字列
javelin.resource.itemName.prefix=/javelin

# 計測項目名(ID)に接頭辞を付与しない項目の前方一致パターンリスト
#javelin.resource.itemName.noPrefixList=/hdfs,/mapreduce

# End of javelin.properties ####################################################
