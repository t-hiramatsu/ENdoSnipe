<?xml version="1.0" encoding="UTF-8"?>


<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<context:component-scan base-package="jp.co.acroquest.endosnipe" />
	<context:component-scan base-package="org.wgp" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	<beans:bean
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
		<beans:property name="alwaysUseFullPath" value="true" />
	</beans:bean>

	<aop:config>
		<aop:aspect ref="changeDataInterceptor">
			<aop:pointcut id="addDataPointCut"
				expression="execution(* org.wgp.manager.WgpDataManager.setData (..))" />
			<aop:before pointcut-ref="addDataPointCut" method="addInterceptor" />
			<aop:pointcut id="updateDataPointCut"
				expression="execution(* org.wgp.manager.WgpDataManager.updateData (..))" />
			<aop:before pointcut-ref="updateDataPointCut" method="updateInterceptor" />
			<aop:pointcut id="deleteDataPointCut"
				expression="execution(* org.wgp.manager.WgpDataManager.removeData(..))" />
			<aop:before pointcut-ref="deleteDataPointCut" method="deleteInterceptor" />
		</aop:aspect>
		<aop:aspect ref="completeUpdateDataInterceptor">
			<!-- you must change this setting of expression. -->
			<aop:pointcut id="completePointCut"
				expression="execution(* jp.co.acroquest.endosnipe.web.dashboard.manager.ResourceSender.send(..))" />
			<!-- end -->
			<aop:after pointcut-ref="completePointCut" method="completeInterceptor" />
		</aop:aspect>
	</aop:config>

	<beans:bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="org.postgresql.Driver" />
		<beans:property name="url"
			value="jdbc:postgresql://localhost/endosnipedb" />
		<beans:property name="username" value="postgres" />
		<beans:property name="password" value="postgres" />
	</beans:bean>

	<beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="mapperLocations"
			value="classpath:jp/co/acroquest/endosnipe/web/dashboard/dao/**/*.xml" />
	</beans:bean>

	<beans:bean id="signalInfoDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<beans:property name="mapperInterface"
			value="jp.co.acroquest.endosnipe.web.dashboard.dao.SignalInfoDao" />
		<beans:property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</beans:bean>

	<beans:bean id="mapInfoDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<beans:property name="mapperInterface"
			value="jp.co.acroquest.endosnipe.web.dashboard.dao.MapInfoDao" />
		<beans:property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</beans:bean>

	<beans:bean id="reportDefinitionDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<beans:property name="mapperInterface"
			value="jp.co.acroquest.endosnipe.web.dashboard.dao.ReportDefinitionDao" />
		<beans:property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</beans:bean>

	<beans:bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>
</beans:beans>
